# 2. FIRST STEPS: REACT AND TYPESCRIPT
--------------------------------------

* Introduction to TypeScript with React
---------------------------------------
. Basics of a TypeScript project:
	
"@types/jest": "^27.5.2",
"@types/node": "^16.18.96",
"@types/react": "^18.2.79",

These files support the custom type definitions that come with a React project such as jest, node and react types.  

tsconfig.json
-------------
{
  "compilerOptions": {
    "target": "es5",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noFallthroughCasesInSwitch": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx"
  },
  "include": [
    "src"
  ]
}


This is the one file neede to be able to use TypeScript in the project.

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Basic types
-------------

This is how we define a type for our variables:

let firstValue: string = 'Manny';
let firstValue: number = 34;
let firstValue: boolean = true;

In order to define the type of an array we do this:

let firstValue: number[] = [2, 3, 56];

Or we can do this: (For example in the case that we are creating an array of strings):

let firstValue: Array<string> = ['2', '3', 'manny'];

App.tsx
-------
import React, { Component } from 'react';
import logo from './logo.svg';
import './App.css';

class App extends Component {
  render() {
    //let firstValue: string = 'Manny';
    //let firstValue: number = 34;
    //let firstValue: boolean = true;
    //let firstValue: number[] = [2, 3, 56];
    let firstValue: Array<string> = ['2', '3', 'manny'];
    return (
      <div className="App">
        <header className="App-header">
          <img src={logo} className="App-logo" alt="logo" />
          <p>
            The value {firstValue} is of { typeof firstValue} type!
          </p>
        </header>
      </div>
    );
  }

}

export default App;

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Other complex types
---------------------

























































